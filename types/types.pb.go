// Code generated by protoc-gen-go.
// source: types.proto
// DO NOT EDIT!

/*
Package types is a generated protocol buffer package.

It is generated from these files:
	types.proto

It has these top-level messages:
	Proposal
	Request
	RequestPrepare
	RequestAccept
	RequestChosen
	Response
	ResponsePrepare
	ResponseReject
	ResponseAccept
	ResponseChosen
	Update
	UpdateAccept
	UpdateChosen
	Decision
	Empty
*/
package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Proposal
type Proposal struct {
	ProposalNumber uint64 `protobuf:"varint,1,opt,name=proposalNumber" json:"proposalNumber,omitempty"`
	Value          string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *Proposal) Reset()                    { *m = Proposal{} }
func (m *Proposal) String() string            { return proto.CompactTextString(m) }
func (*Proposal) ProtoMessage()               {}
func (*Proposal) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// Request
type Request struct {
	// Types that are valid to be assigned to Value:
	//	*Request_Prepare
	//	*Request_Accept
	//	*Request_Chosen
	Value isRequest_Value `protobuf_oneof:"value"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type isRequest_Value interface {
	isRequest_Value()
}

type Request_Prepare struct {
	Prepare *RequestPrepare `protobuf:"bytes,1,opt,name=prepare,oneof"`
}
type Request_Accept struct {
	Accept *RequestAccept `protobuf:"bytes,2,opt,name=accept,oneof"`
}
type Request_Chosen struct {
	Chosen *RequestChosen `protobuf:"bytes,3,opt,name=chosen,oneof"`
}

func (*Request_Prepare) isRequest_Value() {}
func (*Request_Accept) isRequest_Value()  {}
func (*Request_Chosen) isRequest_Value()  {}

func (m *Request) GetValue() isRequest_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Request) GetPrepare() *RequestPrepare {
	if x, ok := m.GetValue().(*Request_Prepare); ok {
		return x.Prepare
	}
	return nil
}

func (m *Request) GetAccept() *RequestAccept {
	if x, ok := m.GetValue().(*Request_Accept); ok {
		return x.Accept
	}
	return nil
}

func (m *Request) GetChosen() *RequestChosen {
	if x, ok := m.GetValue().(*Request_Chosen); ok {
		return x.Chosen
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Request) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Request_OneofMarshaler, _Request_OneofUnmarshaler, _Request_OneofSizer, []interface{}{
		(*Request_Prepare)(nil),
		(*Request_Accept)(nil),
		(*Request_Chosen)(nil),
	}
}

func _Request_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Request)
	// value
	switch x := m.Value.(type) {
	case *Request_Prepare:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Prepare); err != nil {
			return err
		}
	case *Request_Accept:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Accept); err != nil {
			return err
		}
	case *Request_Chosen:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Chosen); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Request.Value has unexpected type %T", x)
	}
	return nil
}

func _Request_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Request)
	switch tag {
	case 1: // value.prepare
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestPrepare)
		err := b.DecodeMessage(msg)
		m.Value = &Request_Prepare{msg}
		return true, err
	case 2: // value.accept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestAccept)
		err := b.DecodeMessage(msg)
		m.Value = &Request_Accept{msg}
		return true, err
	case 3: // value.chosen
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestChosen)
		err := b.DecodeMessage(msg)
		m.Value = &Request_Chosen{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Request_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Request)
	// value
	switch x := m.Value.(type) {
	case *Request_Prepare:
		s := proto.Size(x.Prepare)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_Accept:
		s := proto.Size(x.Accept)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_Chosen:
		s := proto.Size(x.Chosen)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type RequestPrepare struct {
	ProposerID     string `protobuf:"bytes,1,opt,name=proposerID" json:"proposerID,omitempty"`
	ProposalNumber uint64 `protobuf:"varint,2,opt,name=proposalNumber" json:"proposalNumber,omitempty"`
}

func (m *RequestPrepare) Reset()                    { *m = RequestPrepare{} }
func (m *RequestPrepare) String() string            { return proto.CompactTextString(m) }
func (*RequestPrepare) ProtoMessage()               {}
func (*RequestPrepare) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type RequestAccept struct {
	ProposerID string    `protobuf:"bytes,1,opt,name=proposerID" json:"proposerID,omitempty"`
	Proposal   *Proposal `protobuf:"bytes,2,opt,name=proposal" json:"proposal,omitempty"`
}

func (m *RequestAccept) Reset()                    { *m = RequestAccept{} }
func (m *RequestAccept) String() string            { return proto.CompactTextString(m) }
func (*RequestAccept) ProtoMessage()               {}
func (*RequestAccept) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *RequestAccept) GetProposal() *Proposal {
	if m != nil {
		return m.Proposal
	}
	return nil
}

type RequestChosen struct {
	ProposerID string    `protobuf:"bytes,1,opt,name=proposerID" json:"proposerID,omitempty"`
	Proposal   *Proposal `protobuf:"bytes,2,opt,name=proposal" json:"proposal,omitempty"`
}

func (m *RequestChosen) Reset()                    { *m = RequestChosen{} }
func (m *RequestChosen) String() string            { return proto.CompactTextString(m) }
func (*RequestChosen) ProtoMessage()               {}
func (*RequestChosen) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *RequestChosen) GetProposal() *Proposal {
	if m != nil {
		return m.Proposal
	}
	return nil
}

// Response
type Response struct {
	// Types that are valid to be assigned to Value:
	//	*Response_Prepare
	//	*Response_Reject
	//	*Response_Accept
	//	*Response_Chosen
	Value isResponse_Value `protobuf_oneof:"value"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type isResponse_Value interface {
	isResponse_Value()
}

type Response_Prepare struct {
	Prepare *ResponsePrepare `protobuf:"bytes,1,opt,name=prepare,oneof"`
}
type Response_Reject struct {
	Reject *ResponseReject `protobuf:"bytes,2,opt,name=reject,oneof"`
}
type Response_Accept struct {
	Accept *ResponseAccept `protobuf:"bytes,3,opt,name=accept,oneof"`
}
type Response_Chosen struct {
	Chosen *ResponseChosen `protobuf:"bytes,4,opt,name=chosen,oneof"`
}

func (*Response_Prepare) isResponse_Value() {}
func (*Response_Reject) isResponse_Value()  {}
func (*Response_Accept) isResponse_Value()  {}
func (*Response_Chosen) isResponse_Value()  {}

func (m *Response) GetValue() isResponse_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Response) GetPrepare() *ResponsePrepare {
	if x, ok := m.GetValue().(*Response_Prepare); ok {
		return x.Prepare
	}
	return nil
}

func (m *Response) GetReject() *ResponseReject {
	if x, ok := m.GetValue().(*Response_Reject); ok {
		return x.Reject
	}
	return nil
}

func (m *Response) GetAccept() *ResponseAccept {
	if x, ok := m.GetValue().(*Response_Accept); ok {
		return x.Accept
	}
	return nil
}

func (m *Response) GetChosen() *ResponseChosen {
	if x, ok := m.GetValue().(*Response_Chosen); ok {
		return x.Chosen
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Response) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Response_OneofMarshaler, _Response_OneofUnmarshaler, _Response_OneofSizer, []interface{}{
		(*Response_Prepare)(nil),
		(*Response_Reject)(nil),
		(*Response_Accept)(nil),
		(*Response_Chosen)(nil),
	}
}

func _Response_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Response)
	// value
	switch x := m.Value.(type) {
	case *Response_Prepare:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Prepare); err != nil {
			return err
		}
	case *Response_Reject:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reject); err != nil {
			return err
		}
	case *Response_Accept:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Accept); err != nil {
			return err
		}
	case *Response_Chosen:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Chosen); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Response.Value has unexpected type %T", x)
	}
	return nil
}

func _Response_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Response)
	switch tag {
	case 1: // value.prepare
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponsePrepare)
		err := b.DecodeMessage(msg)
		m.Value = &Response_Prepare{msg}
		return true, err
	case 2: // value.reject
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseReject)
		err := b.DecodeMessage(msg)
		m.Value = &Response_Reject{msg}
		return true, err
	case 3: // value.accept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseAccept)
		err := b.DecodeMessage(msg)
		m.Value = &Response_Accept{msg}
		return true, err
	case 4: // value.chosen
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResponseChosen)
		err := b.DecodeMessage(msg)
		m.Value = &Response_Chosen{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Response_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Response)
	// value
	switch x := m.Value.(type) {
	case *Response_Prepare:
		s := proto.Size(x.Prepare)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_Reject:
		s := proto.Size(x.Reject)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_Accept:
		s := proto.Size(x.Accept)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_Chosen:
		s := proto.Size(x.Chosen)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ResponsePrepare struct {
	AcceptorID string    `protobuf:"bytes,1,opt,name=acceptorID" json:"acceptorID,omitempty"`
	Proposal   *Proposal `protobuf:"bytes,2,opt,name=proposal" json:"proposal,omitempty"`
}

func (m *ResponsePrepare) Reset()                    { *m = ResponsePrepare{} }
func (m *ResponsePrepare) String() string            { return proto.CompactTextString(m) }
func (*ResponsePrepare) ProtoMessage()               {}
func (*ResponsePrepare) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ResponsePrepare) GetProposal() *Proposal {
	if m != nil {
		return m.Proposal
	}
	return nil
}

type ResponseReject struct {
	AcceptorID string `protobuf:"bytes,1,opt,name=acceptorID" json:"acceptorID,omitempty"`
}

func (m *ResponseReject) Reset()                    { *m = ResponseReject{} }
func (m *ResponseReject) String() string            { return proto.CompactTextString(m) }
func (*ResponseReject) ProtoMessage()               {}
func (*ResponseReject) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type ResponseAccept struct {
	AcceptorID string `protobuf:"bytes,1,opt,name=acceptorID" json:"acceptorID,omitempty"`
}

func (m *ResponseAccept) Reset()                    { *m = ResponseAccept{} }
func (m *ResponseAccept) String() string            { return proto.CompactTextString(m) }
func (*ResponseAccept) ProtoMessage()               {}
func (*ResponseAccept) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type ResponseChosen struct {
}

func (m *ResponseChosen) Reset()                    { *m = ResponseChosen{} }
func (m *ResponseChosen) String() string            { return proto.CompactTextString(m) }
func (*ResponseChosen) ProtoMessage()               {}
func (*ResponseChosen) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

// Updates
type Update struct {
	// Types that are valid to be assigned to Value:
	//	*Update_Accept
	//	*Update_Chosen
	Value isUpdate_Value `protobuf_oneof:"value"`
}

func (m *Update) Reset()                    { *m = Update{} }
func (m *Update) String() string            { return proto.CompactTextString(m) }
func (*Update) ProtoMessage()               {}
func (*Update) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

type isUpdate_Value interface {
	isUpdate_Value()
}

type Update_Accept struct {
	Accept *UpdateAccept `protobuf:"bytes,1,opt,name=accept,oneof"`
}
type Update_Chosen struct {
	Chosen *UpdateChosen `protobuf:"bytes,2,opt,name=chosen,oneof"`
}

func (*Update_Accept) isUpdate_Value() {}
func (*Update_Chosen) isUpdate_Value() {}

func (m *Update) GetValue() isUpdate_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Update) GetAccept() *UpdateAccept {
	if x, ok := m.GetValue().(*Update_Accept); ok {
		return x.Accept
	}
	return nil
}

func (m *Update) GetChosen() *UpdateChosen {
	if x, ok := m.GetValue().(*Update_Chosen); ok {
		return x.Chosen
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Update) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Update_OneofMarshaler, _Update_OneofUnmarshaler, _Update_OneofSizer, []interface{}{
		(*Update_Accept)(nil),
		(*Update_Chosen)(nil),
	}
}

func _Update_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Update)
	// value
	switch x := m.Value.(type) {
	case *Update_Accept:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Accept); err != nil {
			return err
		}
	case *Update_Chosen:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Chosen); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Update.Value has unexpected type %T", x)
	}
	return nil
}

func _Update_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Update)
	switch tag {
	case 1: // value.accept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UpdateAccept)
		err := b.DecodeMessage(msg)
		m.Value = &Update_Accept{msg}
		return true, err
	case 2: // value.chosen
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UpdateChosen)
		err := b.DecodeMessage(msg)
		m.Value = &Update_Chosen{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Update_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Update)
	// value
	switch x := m.Value.(type) {
	case *Update_Accept:
		s := proto.Size(x.Accept)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Update_Chosen:
		s := proto.Size(x.Chosen)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type UpdateAccept struct {
	AcceptorID string    `protobuf:"bytes,1,opt,name=acceptorID" json:"acceptorID,omitempty"`
	Proposal   *Proposal `protobuf:"bytes,2,opt,name=proposal" json:"proposal,omitempty"`
}

func (m *UpdateAccept) Reset()                    { *m = UpdateAccept{} }
func (m *UpdateAccept) String() string            { return proto.CompactTextString(m) }
func (*UpdateAccept) ProtoMessage()               {}
func (*UpdateAccept) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *UpdateAccept) GetProposal() *Proposal {
	if m != nil {
		return m.Proposal
	}
	return nil
}

type UpdateChosen struct {
	AcceptorID string    `protobuf:"bytes,1,opt,name=acceptorID" json:"acceptorID,omitempty"`
	Proposal   *Proposal `protobuf:"bytes,2,opt,name=proposal" json:"proposal,omitempty"`
}

func (m *UpdateChosen) Reset()                    { *m = UpdateChosen{} }
func (m *UpdateChosen) String() string            { return proto.CompactTextString(m) }
func (*UpdateChosen) ProtoMessage()               {}
func (*UpdateChosen) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *UpdateChosen) GetProposal() *Proposal {
	if m != nil {
		return m.Proposal
	}
	return nil
}

// Decision
type Decision struct {
	LearnerID string    `protobuf:"bytes,1,opt,name=learnerID" json:"learnerID,omitempty"`
	Proposal  *Proposal `protobuf:"bytes,2,opt,name=proposal" json:"proposal,omitempty"`
}

func (m *Decision) Reset()                    { *m = Decision{} }
func (m *Decision) String() string            { return proto.CompactTextString(m) }
func (*Decision) ProtoMessage()               {}
func (*Decision) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *Decision) GetProposal() *Proposal {
	if m != nil {
		return m.Proposal
	}
	return nil
}

// Empty
type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func init() {
	proto.RegisterType((*Proposal)(nil), "types.Proposal")
	proto.RegisterType((*Request)(nil), "types.Request")
	proto.RegisterType((*RequestPrepare)(nil), "types.RequestPrepare")
	proto.RegisterType((*RequestAccept)(nil), "types.RequestAccept")
	proto.RegisterType((*RequestChosen)(nil), "types.RequestChosen")
	proto.RegisterType((*Response)(nil), "types.Response")
	proto.RegisterType((*ResponsePrepare)(nil), "types.ResponsePrepare")
	proto.RegisterType((*ResponseReject)(nil), "types.ResponseReject")
	proto.RegisterType((*ResponseAccept)(nil), "types.ResponseAccept")
	proto.RegisterType((*ResponseChosen)(nil), "types.ResponseChosen")
	proto.RegisterType((*Update)(nil), "types.Update")
	proto.RegisterType((*UpdateAccept)(nil), "types.UpdateAccept")
	proto.RegisterType((*UpdateChosen)(nil), "types.UpdateChosen")
	proto.RegisterType((*Decision)(nil), "types.Decision")
	proto.RegisterType((*Empty)(nil), "types.Empty")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Agent service

type AgentClient interface {
	HandleRequest(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	HandleUpdate(ctx context.Context, in *Update, opts ...grpc.CallOption) (*Empty, error)
	HandleDecision(ctx context.Context, in *Decision, opts ...grpc.CallOption) (*Empty, error)
}

type agentClient struct {
	cc *grpc.ClientConn
}

func NewAgentClient(cc *grpc.ClientConn) AgentClient {
	return &agentClient{cc}
}

func (c *agentClient) HandleRequest(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/types.Agent/HandleRequest", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) HandleUpdate(ctx context.Context, in *Update, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc.Invoke(ctx, "/types.Agent/HandleUpdate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) HandleDecision(ctx context.Context, in *Decision, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc.Invoke(ctx, "/types.Agent/HandleDecision", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Agent service

type AgentServer interface {
	HandleRequest(context.Context, *Request) (*Response, error)
	HandleUpdate(context.Context, *Update) (*Empty, error)
	HandleDecision(context.Context, *Decision) (*Empty, error)
}

func RegisterAgentServer(s *grpc.Server, srv AgentServer) {
	s.RegisterService(&_Agent_serviceDesc, srv)
}

func _Agent_HandleRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).HandleRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.Agent/HandleRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).HandleRequest(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_HandleUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Update)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).HandleUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.Agent/HandleUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).HandleUpdate(ctx, req.(*Update))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_HandleDecision_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Decision)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).HandleDecision(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.Agent/HandleDecision",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).HandleDecision(ctx, req.(*Decision))
	}
	return interceptor(ctx, in, info, handler)
}

var _Agent_serviceDesc = grpc.ServiceDesc{
	ServiceName: "types.Agent",
	HandlerType: (*AgentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HandleRequest",
			Handler:    _Agent_HandleRequest_Handler,
		},
		{
			MethodName: "HandleUpdate",
			Handler:    _Agent_HandleUpdate_Handler,
		},
		{
			MethodName: "HandleDecision",
			Handler:    _Agent_HandleDecision_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "types.proto",
}

func init() { proto.RegisterFile("types.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 477 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x54, 0xed, 0x6a, 0xdb, 0x30,
	0x14, 0xad, 0xd3, 0xfa, 0x23, 0x37, 0x89, 0x33, 0xb4, 0x76, 0x84, 0x32, 0x46, 0xf1, 0x8f, 0x51,
	0x28, 0x4d, 0x3a, 0xef, 0x09, 0xba, 0x75, 0xe0, 0xfd, 0x19, 0x45, 0x50, 0x18, 0x6c, 0x0c, 0x5c,
	0xe7, 0xb2, 0x65, 0x38, 0x96, 0x26, 0x3b, 0x83, 0x3c, 0xc9, 0x9e, 0x60, 0x2f, 0xb5, 0xa7, 0x19,
	0x96, 0xe4, 0xcf, 0x38, 0x0d, 0x81, 0xfc, 0x8b, 0xee, 0x3d, 0xe7, 0xf8, 0xde, 0x73, 0x14, 0xc1,
	0x20, 0x5b, 0x73, 0x4c, 0xa7, 0x5c, 0xb0, 0x8c, 0x11, 0x53, 0x1e, 0xbc, 0x00, 0x9c, 0x7b, 0xc1,
	0x38, 0x4b, 0xc3, 0x98, 0xbc, 0x06, 0x97, 0xeb, 0xdf, 0x9f, 0x56, 0xcb, 0x47, 0x14, 0x13, 0xe3,
	0xc2, 0xb8, 0x3c, 0xa1, 0xad, 0x2a, 0x39, 0x05, 0xf3, 0x77, 0x18, 0xaf, 0x70, 0xd2, 0xbb, 0x30,
	0x2e, 0xfb, 0x54, 0x1d, 0xbc, 0xbf, 0x06, 0xd8, 0x14, 0x7f, 0xad, 0x30, 0xcd, 0xc8, 0x1b, 0xb0,
	0xb9, 0x40, 0x1e, 0x0a, 0x94, 0x12, 0x03, 0xff, 0x6c, 0xaa, 0xbe, 0xad, 0x01, 0xf7, 0xaa, 0x19,
	0x1c, 0xd1, 0x02, 0x47, 0xa6, 0x60, 0x85, 0x51, 0x84, 0x3c, 0x93, 0xaa, 0x03, 0xff, 0xb4, 0xc9,
	0xb8, 0x95, 0xbd, 0xe0, 0x88, 0x6a, 0x54, 0x8e, 0x8f, 0x7e, 0xb0, 0x14, 0x93, 0xc9, 0x71, 0x17,
	0xfe, 0xbd, 0xec, 0xe5, 0x78, 0x85, 0x7a, 0x67, 0xeb, 0xa1, 0xbd, 0xcf, 0xe0, 0x36, 0xa7, 0x20,
	0xaf, 0x00, 0xd4, 0x86, 0x28, 0x3e, 0xde, 0xc9, 0x81, 0xfb, 0xb4, 0x56, 0xe9, 0xf0, 0xa5, 0xd7,
	0xe5, 0x8b, 0xf7, 0x15, 0x46, 0x8d, 0x69, 0x77, 0x0a, 0x5f, 0x81, 0x53, 0x48, 0xe8, 0xad, 0xc7,
	0x7a, 0x8b, 0x22, 0x13, 0x5a, 0x02, 0x6a, 0xea, 0x6a, 0xb7, 0xc3, 0xaa, 0xff, 0x33, 0xc0, 0xa1,
	0x98, 0x72, 0x96, 0xa4, 0x48, 0xfc, 0x76, 0x7c, 0x2f, 0x4a, 0x73, 0x15, 0xa2, 0x23, 0xbf, 0x19,
	0x58, 0x02, 0x7f, 0x62, 0x54, 0xe4, 0x77, 0xd6, 0xa2, 0x50, 0xd9, 0xcc, 0x03, 0x51, 0xb0, 0x9c,
	0xa0, 0x03, 0x3f, 0xee, 0x24, 0x6c, 0x24, 0x3e, 0x2b, 0x13, 0x3f, 0xe9, 0x24, 0x6c, 0x8f, 0xfc,
	0x1b, 0x8c, 0x5b, 0x93, 0xe7, 0xe6, 0x29, 0x59, 0x56, 0x33, 0xaf, 0xaa, 0xec, 0x67, 0xde, 0x4d,
	0x7e, 0xa5, 0xea, 0x6b, 0xee, 0x92, 0xaf, 0x33, 0xaa, 0xbb, 0xf2, 0x24, 0xe3, 0x59, 0xc5, 0x50,
	0x8b, 0x7a, 0x0c, 0xac, 0x07, 0x3e, 0x0f, 0x33, 0x24, 0xd7, 0xa5, 0x95, 0x2a, 0xae, 0xe7, 0x7a,
	0x54, 0xd5, 0xde, 0x30, 0xf2, 0xba, 0x34, 0xb2, 0xd7, 0x01, 0xdf, 0x6e, 0xe3, 0x17, 0x18, 0xd6,
	0x15, 0x0f, 0xeb, 0x61, 0x29, 0x5e, 0xdd, 0xee, 0xc3, 0x89, 0x3f, 0x80, 0x73, 0x87, 0xd1, 0x22,
	0x5d, 0xb0, 0x84, 0xbc, 0x84, 0x7e, 0x8c, 0xa1, 0x48, 0x6a, 0xff, 0x9a, 0xaa, 0xb0, 0x9f, 0xac,
	0x0d, 0xe6, 0x87, 0x25, 0xcf, 0xd6, 0xfe, 0x1f, 0x03, 0xcc, 0xdb, 0xef, 0x98, 0x64, 0xe4, 0x06,
	0x46, 0x41, 0x98, 0xcc, 0x63, 0x2c, 0x9e, 0x42, 0xb7, 0xf9, 0x2e, 0x9d, 0x8f, 0x5b, 0xb7, 0x96,
	0x5c, 0xc1, 0x50, 0x31, 0x74, 0x98, 0xa3, 0x46, 0x1a, 0xe7, 0x43, 0x7d, 0x94, 0x1f, 0x22, 0x33,
	0x70, 0x15, 0xb8, 0x5c, 0xa7, 0xd0, 0x2b, 0x0a, 0x4d, 0xc2, 0xa3, 0x25, 0x5f, 0xfb, 0xb7, 0xff,
	0x03, 0x00, 0x00, 0xff, 0xff, 0x0e, 0xda, 0xfc, 0xfa, 0xfc, 0x05, 0x00, 0x00,
}
